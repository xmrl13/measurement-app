spring.application.name=user

# Live reload
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Database configuration, use .env
spring.r2dbc.url=r2dbc:postgresql://${USER_DB_HOST}:${USER_DB_PORT}/${USER_DB_NAME}?schema=app
spring.r2dbc.username=${USER_DB_USERNAME}
spring.r2dbc.password=${USER_DB_PASSWORD}

# Jwt secret to generate jwt tokens
jwt.secret=${GATEWAY_JWT_SECRET}

# Service port
server.port=${USER_SERVICE_PORT}
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Eureka register configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL}
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=${EUREKA_SERVER_IP}

# Kafka configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.acks=all
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.permissions-all.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Logs
logging.level.org.springframework.r2dbc.core=debug
logging.level.io.r2dbc.postgresql.QUERY=debug
