spring.application.name=measurement

# Live reload
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

spring.r2dbc.url=r2dbc:postgresql://localhost:5437/measurement_db?schema=app

spring.r2dbc.username=admin
spring.r2dbc.password=admin

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

server.port= 8033
spring.security.user.name=
spring.security.user.password=
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

logging.level.org.springframework.security=error
logging.level.org.springframework.web=error
logging.level.com.netflix.eureka=error
logging.level.com.netflix.discovery=error
logging.level.reactor.netty=error
logging.level.security=error
spring.data.r2dbc.repositories.enabled=true


spring.main.allow-bean-definition-overriding=true

logging.level.root=info

logging.level.org.springframework.r2dbc.core=debug
logging.level.io.r2dbc.postgresql.QUERY=debug
logging.level.io.r2dbc.postgresql=debug

logging.level.org.springframework.data.r2dbc=debug
logging.level.org.springframework.data=debug

logging.level.reactor.netty.http.client=error
logging.level.reactor.netty.http.server=error

logging.level.org.springframework.r2dbc.connection=debug
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=error

logging.level.org.apache.kafka=error
logging.level.org.springframework.kafka=error

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=measurement-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.acks=all

spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.value.default.type=message.dto.PermissionEventDTO

# Configurações para desserializar JSON
spring.kafka.consumer.properties.spring.json.trusted.packages=*

